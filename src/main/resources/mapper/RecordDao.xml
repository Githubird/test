<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.sunshinenny.base.dao.RecordDao">

    <resultMap type="me.sunshinenny.base.entity.Record" id="RecordMap">
        <result property="recordId" column="record_id" jdbcType="INTEGER"/>
        <result property="achieveId" column="achieve_id" jdbcType="INTEGER"/>
        <result property="achievement" column="achievement" jdbcType="INTEGER"/>
        <result property="unitId" column="unit_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="newtime" column="newtime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RecordMap">
        select
          record_id, achieve_id, achievement, unit_id, user_id, user_name, newtime
        from achievement.record
        where record_id = #{recordId}
    </select>
    <select id="queryByTime" resultMap="RecordMap">
        select
          record_id, achieve_id, achievement, unit_id, user_id, user_name, newtime
        from achievement.record
        where newtime BETWEEN #{btime} and #{etime}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RecordMap">
        select
          record_id, achieve_id, achievement, unit_id, user_id, user_name, newtime
        from achievement.record
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RecordMap">
        select
        record_id, achieve_id, achievement, unit_id, user_id, user_name, newtime
        from achievement.record
        <where>
            <if test="recordId != null">
                and record_id = #{recordId}
            </if>
            <if test="achieveId != null">
                and achieve_id = #{achieveId}
            </if>
            <if test="achievement != null">
                and achievement = #{achievement}
            </if>
            <if test="unitId != null">
                and unit_id = #{unitId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="newtime != null">
                and newtime = #{newtime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="recordId" useGeneratedKeys="true">
        insert into achievement.record(achieve_id, achievement, unit_id, user_id, user_name, newtime)
        values (#{achieveId}, #{achievement}, #{unitId}, #{userId}, #{userName}, #{newtime})
    </insert>

    <insert id="insertBatch" keyProperty="recordId" useGeneratedKeys="true">
        insert into achievement.record(achieve_id, achievement, unit_id, user_id, user_name, newtime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.achieveId}, #{entity.achievement}, #{entity.unitId}, #{entity.userId}, #{entity.userName},
            #{entity.newtime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="recordId" useGeneratedKeys="true">
        insert into achievement.record(achieve_id, achievement, unit_id, user_id, user_name, newtime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.achieveId}, #{entity.achievement}, #{entity.unitId}, #{entity.userId}, #{entity.userName},
            #{entity.newtime})
        </foreach>
        on duplicate key update
        achieve_id = values(achieve_id) , achievement = values(achievement) , unit_id = values(unit_id) , user_id =
        values(user_id) , user_name = values(user_name) , newtime = values(newtime)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update achievement.record
        <set>
            <if test="achieveId != null">
                achieve_id = #{achieveId},
            </if>
            <if test="achievement != null">
                achievement = #{achievement},
            </if>
            <if test="unitId != null">
                unit_id = #{unitId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="newtime != null">
                newtime = #{newtime},
            </if>
        </set>
        where record_id = #{recordId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from record where record_id = #{recordId}
    </delete>

</mapper>